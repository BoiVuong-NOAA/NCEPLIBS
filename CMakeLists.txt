cmake_minimum_required(VERSION 3.15)
set(CMAKE_DISABLE_IN_SOURCE_BUILD ON)

cmake_policy(SET CMP0048 NEW)

#Set cmake policies
if(POLICY CMP0009)
  cmake_policy(SET CMP0009 NEW)
endif()
if(POLICY CMP0046)
  cmake_policy(SET CMP0046 NEW)
endif()
if(POLICY CMP0074)
  cmake_policy(SET CMP0074 NEW)
endif()

project(NCEPLIBS)
enable_language(Fortran)

set(CMAKE_FIND_PACKAGE_PREFER_CONFIG true)

# set default install path if not prov ided
if (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  set (CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE PATH "default install path" FORCE )
endif()

#Set up module and lib paths for build
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

# make sure that the default is a RELEASE
if (NOT CMAKE_BUILD_TYPE)
  set (CMAKE_BUILD_TYPE RELEASE CACHE STRING
    "Choose the type of build, options are: PRODUCTION Debug Release."
    FORCE)
endif (NOT CMAKE_BUILD_TYPE)

STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RelWithDebInfo" BUILD_RELEASE)
if(NOT BUILD_RELEASE)
  STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RELEASE" BUILD_RELEASE)
endif()
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "PRODUCTION" BUILD_PRODUCTION)
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "PROFILE" BUILD_PROFILE)
if( BUILD_PRODUCTION )
  set( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/exec )
endif()

if(DEFINED EXTERNAL_LIBS_DIR)
  if(NOT DEFINED ENV{Jasper_ROOT})
    set(Jasper_ROOT ${EXTERNAL_LIBS_DIR})
  endif()
  if(NOT DEFINED ENV{PNG_ROOT})
    set(PNG_ROOT ${EXTERNAL_LIBS_DIR})
  endif()
  if(NOT DEFINED ENV{ZLIB_ROOT})
    set(ZLIB_ROOT ${EXTERNAL_LIBS_DIR})
  endif()
  if (NOT DEFINED ENV{ESMFMKFILE})
    find_path(mkfilepath NAMES esmf.mk HINTS ${EXTERNAL_LIBS_DIR}/lib ${EXTERNAL_LIBS_DIR}/lib64)
    set(ENV{ESMFMKFILE} "${mkfilepath}/esmf.mk")
    message("setting ESMFMKFILE environment variable $ENV{ESMFMKFILE}")
  endif()
  if(NOT DEFINED ENV{HDF5_ROOT})
    set(HDF5_ROOT ${EXTERNAL_LIBS_DIR})
  endif()
  if(NOT DEFINED ENV{NETCDF})
    set(NETCDF ${EXTERNAL_LIBS_DIR})
  endif()
endif()

if(NOT DEFINED ENV{ESMFMKFILE})
  message("ESMFMKFILE not set, FindPackage won't be able to find ESMF")
endif()

add_subdirectory(NCEPLIBS-bacio)
add_subdirectory(NCEPLIBS-ip)
add_subdirectory(NCEPLIBS-g2)
add_subdirectory(NCEPLIBS-sigio)
add_subdirectory(NCEPLIBS-sp)
add_subdirectory(NCEPLIBS-nemsio)
add_subdirectory(NCEPLIBS-w3nco)
add_subdirectory(NCEPLIBS-grib_util)
add_subdirectory(NCEPLIBS-bufr)
add_subdirectory(NCEPLIBS-crtm)
add_subdirectory(NCEPLIBS-g2tmpl)
add_subdirectory(NCEPLIBS-gfsio)
add_subdirectory(NCEPLIBS-landsfcutil)
add_subdirectory(NCEPLIBS-sfcio)
add_subdirectory(NCEPLIBS-w3emc)
add_subdirectory(NCEPLIBS-prod_util)
add_subdirectory(NCEPLIBS-nemsiogfs)
add_subdirectory(UFS_UTILS)
add_subdirectory(NCEPLIBS-post)

# Create a shell script to set all necessary environment variables for NCEPLIBS and its dependencies
set(SCRIPT_NAME "${CMAKE_INSTALL_PREFIX}/bin/setenv_nceplibs.sh")
message(STATUS "Creating shell script ${SCRIPT_NAME} to set environment variables for using NCEPLIBS")
file( WRITE  ${SCRIPT_NAME} "#/bin/bash\n")
file( APPEND ${SCRIPT_NAME} "\n")
file( APPEND ${SCRIPT_NAME} "echo 'Setting environment variables for NCEPLIBS and its dependencies'\n")
file( APPEND ${SCRIPT_NAME} "# Dependencies\n")
file( APPEND ${SCRIPT_NAME} "export Jasper_ROOT=${Jasper_ROOT}\n")
file( APPEND ${SCRIPT_NAME} "export PNG_ROOT=${PNG_ROOT}\n")
file( APPEND ${SCRIPT_NAME} "export ZLIB_ROOT=${ZLIB_ROOT}\n")
file( APPEND ${SCRIPT_NAME} "export ESMFMKFILE=${ESMFMKFILE}\n")
file( APPEND ${SCRIPT_NAME} "export HDF5_ROOT=${HDF5_ROOT}\n")
file( APPEND ${SCRIPT_NAME} "export NETCDF=${NETCDF}\n")
file( APPEND ${SCRIPT_NAME} "# NCEPLIBS\n")
file( APPEND ${SCRIPT_NAME} "export NCEPLIBS_DIR=${CMAKE_INSTALL_PREFIX}\n")
file( APPEND ${SCRIPT_NAME} "export NEMSIO_INC=${CMAKE_INSTALL_PREFIX}/include\n")
file( APPEND ${SCRIPT_NAME} "export NEMSIO_LIB=${CMAKE_INSTALL_PREFIX}/lib/libnemsio_v2.2.3.a\n")
file( APPEND ${SCRIPT_NAME} "export BACIO_LIB4=${CMAKE_INSTALL_PREFIX}/lib/libbacio_v2.1.0_4.a\n")
file( APPEND ${SCRIPT_NAME} "export SP_LIBd=${CMAKE_INSTALL_PREFIX}/lib/libsp_v2.0.2_d.a\n")
file( APPEND ${SCRIPT_NAME} "export W3EMC_LIBd=${CMAKE_INSTALL_PREFIX}/lib/libw3emc_v2.2.0_d.a\n")
file( APPEND ${SCRIPT_NAME} "export W3NCO_LIBd=${CMAKE_INSTALL_PREFIX}/lib/libw3nco_v2.0.6_d.a\n")
file( APPEND ${SCRIPT_NAME} "#\n")

# Create shell scripts for bash and tcsh to set all necessary environment variables for NCEPLIBS and its dependencies
set(SCRIPT_NAME_BASH "${CMAKE_INSTALL_PREFIX}/bin/setenv_nceplibs.sh")
set(SCRIPT_NAME_TCSH "${CMAKE_INSTALL_PREFIX}/bin/setenv_nceplibs.csh")

message(STATUS "Creating bash shell script ${SCRIPT_NAME_BASH} to set environment variables for using NCEPLIBS")
file( WRITE  ${SCRIPT_NAME_BASH} "#/bin/bash\n")
file( APPEND ${SCRIPT_NAME_BASH} "\n")
file( APPEND ${SCRIPT_NAME_BASH} "echo 'Setting environment variables for NCEPLIBS and its dependencies'\n")
file( APPEND ${SCRIPT_NAME_BASH} "# Dependencies\n")
file( APPEND ${SCRIPT_NAME_BASH} "export Jasper_ROOT=${Jasper_ROOT}\n")
file( APPEND ${SCRIPT_NAME_BASH} "export PNG_ROOT=${PNG_ROOT}\n")
file( APPEND ${SCRIPT_NAME_BASH} "export ZLIB_ROOT=${ZLIB_ROOT}\n")
file( APPEND ${SCRIPT_NAME_BASH} "export ESMFMKFILE=${ESMFMKFILE}\n")
file( APPEND ${SCRIPT_NAME_BASH} "export HDF5_ROOT=${HDF5_ROOT}\n")
file( APPEND ${SCRIPT_NAME_BASH} "export NETCDF=${NETCDF}\n")
file( APPEND ${SCRIPT_NAME_BASH} "# NCEPLIBS\n")
file( APPEND ${SCRIPT_NAME_BASH} "export NCEPLIBS_DIR=${CMAKE_INSTALL_PREFIX}\n")
file( APPEND ${SCRIPT_NAME_BASH} "export NEMSIO_INC=${CMAKE_INSTALL_PREFIX}/include\n")
file( APPEND ${SCRIPT_NAME_BASH} "export NEMSIO_LIB=${CMAKE_INSTALL_PREFIX}/lib/libnemsio_v2.2.3.a\n")
file( APPEND ${SCRIPT_NAME_BASH} "export BACIO_LIB4=${CMAKE_INSTALL_PREFIX}/lib/libbacio_v2.1.0_4.a\n")
file( APPEND ${SCRIPT_NAME_BASH} "export SP_LIBd=${CMAKE_INSTALL_PREFIX}/lib/libsp_v2.0.2_d.a\n")
file( APPEND ${SCRIPT_NAME_BASH} "export W3EMC_LIBd=${CMAKE_INSTALL_PREFIX}/lib/libw3emc_v2.2.0_d.a\n")
file( APPEND ${SCRIPT_NAME_BASH} "export W3NCO_LIBd=${CMAKE_INSTALL_PREFIX}/lib/libw3nco_v2.0.6_d.a\n")
file( APPEND ${SCRIPT_NAME_BASH} "#\n")

message(STATUS "Creating tcsh shell script ${SCRIPT_NAME_TCSH} to set environment variables for using NCEPLIBS")
file( WRITE  ${SCRIPT_NAME_TCSH} "#/bin/tcsh\n")
file( APPEND ${SCRIPT_NAME_TCSH} "\n")
file( APPEND ${SCRIPT_NAME_TCSH} "echo 'Setting environment variables for NCEPLIBS and its dependencies'\n")
file( APPEND ${SCRIPT_NAME_TCSH} "# Dependencies\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv Jasper_ROOT ${Jasper_ROOT}\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv PNG_ROOT ${PNG_ROOT}\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv ZLIB_ROOT ${ZLIB_ROOT}\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv ESMFMKFILE ${ESMFMKFILE}\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv HDF5_ROOT ${HDF5_ROOT}\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv NETCDF ${NETCDF}\n")
file( APPEND ${SCRIPT_NAME_TCSH} "# NCEPLIBS\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv NCEPLIBS_DIR ${CMAKE_INSTALL_PREFIX}\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv NEMSIO_INC ${CMAKE_INSTALL_PREFIX}/include\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv NEMSIO_LIB ${CMAKE_INSTALL_PREFIX}/lib/libnemsio_v2.2.3.a\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv BACIO_LIB4 ${CMAKE_INSTALL_PREFIX}/lib/libbacio_v2.1.0_4.a\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv SP_LIBd ${CMAKE_INSTALL_PREFIX}/lib/libsp_v2.0.2_d.a\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv W3EMC_LIBd ${CMAKE_INSTALL_PREFIX}/lib/libw3emc_v2.2.0_d.a\n")
file( APPEND ${SCRIPT_NAME_TCSH} "setenv W3NCO_LIBd ${CMAKE_INSTALL_PREFIX}/lib/libw3nco_v2.0.6_d.a\n")
file( APPEND ${SCRIPT_NAME_TCSH} "#\n")
