# disable in source builds to protect against overwriting other Makefiles
#set(CMAKE_DISABLE_IN_SOURCE_BUILD ON)
project(NCEPLIBS)
  enable_language (Fortran)
  cmake_policy(SET CMP0009 NEW)
  include(ExternalProject)

  if (NOT CMAKE_BUILD_TYPE)
    set (CMAKE_BUILD_TYPE RELEASE CACHE STRING
        "Choose the type of build, options are: PRODUCTION Debug Release."
        FORCE)
  endif (NOT CMAKE_BUILD_TYPE)
  
  STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RelWithDebInfo" BUILD_RELEASE)
  STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "PRODUCTION" BUILD_PRODUCTION)
  STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "PROFILE" BUILD_PROFILE)
  message("HEY, install dir is ${CMAKE_INSTALL_PREFIX}")
  ExternalProject_Add(NCEPLIBS-bacio 
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/NCEPLIBS-bacio 
    CMAKE_ARGS
      -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
    SOURCE_DIR ${PROJECT_SOURCE_DIR}/NCEPLIBS-bacio 
    INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
    BUILD_COMMAND make
    INSTALL_COMMAND make install
  )
  ExternalProject_Add(NCEPLIBS-bufr  
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/NCEPLIBS-bufr  
    CMAKE_ARGS
      -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
    SOURCE_DIR ${PROJECT_SOURCE_DIR}/NCEPLIBS-bufr  
    INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
    BUILD_COMMAND make
    INSTALL_COMMAND make install
  )
  ExternalProject_Add(NCEPLIBS-nemsio
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/NCEPLIBS-nemsio
    CMAKE_ARGS
      -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
    SOURCE_DIR ${PROJECT_SOURCE_DIR}/NCEPLIBS-nemsio
    INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
    BUILD_COMMAND make
    INSTALL_COMMAND make install
  )
  ExternalProject_Add(NCEPLIBS-sigio 
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/NCEPLIBS-sigio
    CMAKE_ARGS
      -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
    SOURCE_DIR ${PROJECT_SOURCE_DIR}/NCEPLIBS-sigio 
    INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
    BUILD_COMMAND make
    INSTALL_COMMAND make install
  )
  ExternalProject_Add(NCEPLIBS-sfcio 
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/NCEPLIBS-sfcio 
    CMAKE_ARGS
      -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
    SOURCE_DIR ${PROJECT_SOURCE_DIR}/NCEPLIBS-sfcio 
    INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
    BUILD_COMMAND make
    INSTALL_COMMAND make install
  )
  ExternalProject_Add(NCEPLIBS-sp    
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/NCEPLIBS-sp    
    CMAKE_ARGS
      -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
    SOURCE_DIR ${PROJECT_SOURCE_DIR}/NCEPLIBS-sp    
    INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
    BUILD_COMMAND make
    INSTALL_COMMAND make install
  )
  ExternalProject_Add(NCEPLIBS-w3nco 
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/NCEPLIBS-w3nco 
    CMAKE_ARGS
      -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
    SOURCE_DIR ${PROJECT_SOURCE_DIR}/NCEPLIBS-w3nco 
    DEPENDS NCEPLIBS-sigio
    INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
    BUILD_COMMAND make
    INSTALL_COMMAND make install
  )
  ExternalProject_Add(NCEPLIBS-w3emc 
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/NCEPLIBS-w3emc 
    CMAKE_ARGS
      -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
      -DEXTRA_INCLUDE=${CMAKE_INSTALL_PREFIX}/include
    SOURCE_DIR ${PROJECT_SOURCE_DIR}/NCEPLIBS-w3emc 
    DEPENDS NCEPLIBS-sigio
    INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
    BUILD_COMMAND make
    INSTALL_COMMAND make install
  )
